{"version":3,"sources":["Components/NavBar/NavBar.js","Constants/Constants.js","axios.js","Components/Banner/Banner.js","Components/MoviePoster/MoviePoster.js","Components/urls.js","App.js","index.js"],"names":["NavBar","React","createElement","className","src","alt","API_KEY","imageUrl","instance","axios","create","baseURL","Banner","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useEffect","get","concat","then","response","i","Math","floor","random","data","results","length","title","style","backgroundImage","backdrop_path","class","overview","MoviePoster","props","movieposter","setMoviePoster","_useState3","_useState4","youtubeid","setYoutubeid","urls","console","log","map","obj","Fragment","onClick","id","tvshow","options","method","url","headers","accept","Authorization","request","trailers","filter","result","type","catch","error","playvideo","isSmall","poster_path","YouTube","videoId","key","opts","height","width","playerVars","autoplay","originals","action","trending","HorrorMovies","RomanceMovies","Documentaries","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ea26cbe2.chunk.js","sourcesContent":["import React from 'react'\r\nimport './NavBar.css'\r\nfunction NavBar() {\r\n    return (\r\n        <div>\r\n            <div className='navbar'>\r\n                <img className='logo' src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"netflix-logo\" />\r\n                \r\n                {/* <div className='menu-bar'>\r\n                <h3 className='menu-link'>Home</h3>\r\n                <h3 className='menu-link'>Movies</h3>    \r\n                <h3 className='menu-link'>Series</h3>\r\n                </div> */}\r\n                \r\n                <img className=\"avatar\" src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"netflix-avatar\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","export const baseUrl = 'https://api.themoviedb.org/3';\r\nexport const API_KEY = 'a4d71a82b9182f3d21197d95a0fce246';\r\nexport const imageUrl = 'https://image.tmdb.org/t/p/original';\r\n","import axios from 'axios';\r\nimport { baseUrl } from './Constants/Constants';\r\nconst instance = axios.create({\r\n    baseURL: baseUrl,\r\n    \r\n\r\n});\r\n\r\nexport default instance","import React, { useEffect, useState } from 'react'\r\nimport './Banner.css'\r\nimport axios from '../../axios';\r\nimport { API_KEY, imageUrl } from '../../Constants/Constants';\r\n  \r\nfunction Banner() {\r\n  const [movie, setMovie] = useState()\r\n  \r\n  useEffect(() => {\r\n    axios\r\n      .get(`trending/all/week?api_key=${API_KEY}&language=en-US`)\r\n      .then(\r\n        (response) => {\r\n          let i = Math.floor(Math.random() * response.data.results.length)\r\n          // console.log(i)\r\n          setMovie(response.data.results[i].title? response.data.results[i] : response.data.results[i+1])\r\n        })\r\n  },[]);\r\n\r\n\r\n  return (\r\n    <div\r\n      style={{backgroundImage: `url(${movie ?imageUrl+movie.backdrop_path : ''})`}}\r\n      className='banner'>\r\n      <div className='banner-gradient'>\r\n\r\n        <div className=\"banner-content\">\r\n\r\n          <h1 className='banner-title'>{movie ? movie.title : ''}</h1>\r\n\r\n          <div className='banner-buttons'>\r\n\r\n            <div className=\"play-group\">  \r\n              <button className='btn-play'><i class=\"fa-solid fa-play icon-spaces\"></i>Play</button>\r\n              \r\n            </div>\r\n\r\n            <div className=\"more-info-group\">\r\n              <button className='btn-more-info'><i class=\"fa-solid fa-circle-info icon-spaces\"></i>More Info</button>\r\n              \r\n            </div>\r\n            \r\n          </div>\r\n          <p className='banner-description'> {movie? movie.overview:\"\"}</p>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Banner","import React, { useEffect,useState } from 'react'\r\nimport './MoviePoster.css'\r\nimport axios from '../../axios'\r\nimport { imageUrl } from '../../Constants/Constants'\r\nimport YouTube from 'react-youtube';\r\n\r\n\r\nexport default function MoviePoster(props) {\r\n  const [movieposter, setMoviePoster] = useState([])\r\n  const [youtubeid, setYoutubeid] = useState('')\r\n\r\n  \r\n  useEffect(\r\n    () => {\r\n      axios\r\n        .get(props.urls)\r\n        .then(\r\n          response => {\r\n            console.log(response.data.results)\r\n              setMoviePoster(response.data.results)\r\n          })\r\n    }, [MoviePoster])\r\n  \r\n\r\n   const opts = {\r\n      height: '390',\r\n     width: '100%',\r\n      playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 1,\r\n      },\r\n  };\r\n\r\n\r\n\r\n  const playvideo = (id) => {\r\n\r\n    let tvshow = props.title === \"Netflix Originals\" ? 'tv' : 'movie';\r\n    \r\n    const options = {\r\n      method: 'GET',\r\n      \r\n        url: `https://api.themoviedb.org/3/${tvshow}/${id}/videos?language=en-US`,\r\n        headers: {\r\n          accept: 'application/json',\r\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNGQ3MWE4MmI5MTgyZjNkMjExOTdkOTVhMGZjZTI0NiIsInN1YiI6IjY0Y2E3MzJmZDM3MTk3MDEzOTc4YmZjYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.AUfXmoABR1-KBhhano_p4KbRSf3GsYiFSI56mBqXEyk'\r\n        }\r\n      };\r\n      \r\n      axios\r\n        .request(options)\r\n        .then(function (response) {\r\n          if (response.data.results && response.data.results.length !== 0) {\r\n            const trailers = response.data.results.filter(result => result.type === \"Trailer\");\r\n            console.log(trailers);\r\n            setYoutubeid(trailers[0]);\r\n          }\r\n          else {\r\n            console.log('No trailer found')\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.error(error);\r\n        });\r\n  \r\n    } \r\n    \r\n  return (\r\n        <div>\r\n        <div className='movie-posters'>\r\n          <h3 className='movie-name'>{props.title}</h3>\r\n          <div className=\"movie-images\">\r\n            \r\n            \r\n          {movieposter.map((obj) => (\r\n            <>\r\n            <div className='movie-title-group'>  \r\n            <img onClick={()=>playvideo(obj.id)} className = { props.isSmall ? 'movie-image-small' : 'movie-image' } src = { props.isSmall ? `${imageUrl + obj.poster_path}` : `${imageUrl + obj.backdrop_path}` } alt = '' />\r\n             {/* <h3>{obj.title}</h3> */}\r\n            </div>\r\n            </>\r\n          )\r\n      \r\n            \r\n        // <img className={props.isSmall ? 'movie-image-small' : 'movie-image'} src={props.isSmall ? `${imageUrl + obj.poster_path}` : `${imageUrl + obj.backdrop_path}`} alt='' />\r\n        //     <h1 className='movie-title'></h1>\r\n              \r\n            \r\n          )}\r\n      \r\n        </div>\r\n        \r\n        {youtubeid && <YouTube videoId={youtubeid.key} opts={opts} />}\r\n      </div>\r\n      </div>\r\n      )\r\n    }","import { API_KEY } from \"../Constants/Constants\"\r\n\r\nexport const originals = `discover/tv?api_key=${API_KEY}&with_networks=213`\r\nexport const action = `discover/movie?api_key=${API_KEY}&with_genres=28`\r\nexport const trending = `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}&language=en-US`\r\n\r\nexport const ComedyMovies=`'https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=80`\r\n\r\nexport const HorrorMovies=`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=27`\r\n\r\n\r\nexport const RomanceMovies=`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=10749`\r\n\r\nexport const Documentaries=`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n\r\n","\nimport './App.css';\nimport NavBar from './Components/NavBar/NavBar';\nimport Banner from './Components/Banner/Banner';\nimport MoviePoster from './Components/MoviePoster/MoviePoster';\nimport React from 'react';\nimport { action,originals,trending,HorrorMovies,RomanceMovies,Documentaries } from './Components/urls';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Banner />\n      <MoviePoster urls={originals} title=\"Netflix Originals\" />\n      <MoviePoster urls={trending} title=\"Trending\" isSmall />\n      <MoviePoster urls={action} title=\"Action\" isSmall />\n      {/* <MoviePoster urls={ComedyMovies} title=\"Comedy\" isSmall /> */}\n      <MoviePoster urls={HorrorMovies} title=\"Horror\" isSmall />\n      <MoviePoster urls={RomanceMovies} title=\"Romance\" isSmall />\n      <MoviePoster urls={Documentaries} title=\"Documentaries\" isSmall />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}